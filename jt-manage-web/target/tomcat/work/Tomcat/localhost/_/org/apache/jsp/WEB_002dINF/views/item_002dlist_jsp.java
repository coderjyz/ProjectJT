/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-11-01 14:15:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class item_002dlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<table class=\"easyui-datagrid\" id=\"itemList\" title=\"商品列表\"\r\n");
      out.write("       data-options=\r\n");
      out.write("               \"singleSelect:false, ");
      out.write("\r\n");
      out.write("               collapsible:true,    ");
      out.write("\r\n");
      out.write("               pagination:true,     ");
      out.write("\r\n");
      out.write("               url:'/item/findPageObject', ");
      out.write("\r\n");
      out.write("               method:'get',        ");
      out.write("\r\n");
      out.write("               pageSize:20,         ");
      out.write("\r\n");
      out.write("               toolbar:toolbar\"     ");
      out.write("\r\n");
      out.write(">\r\n");
      out.write("    <thead>\r\n");
      out.write("    <tr>\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        <th data-options=\"field:'ck',checkbox:true\"></th>\r\n");
      out.write("        <th data-options=\"field:'id',width:60\">商品ID</th>\r\n");
      out.write("        <th data-options=\"field:'title',width:200\">商品标题</th>\r\n");
      out.write("        <th data-options=\"field:'cid',width:100,align:'center',formatter:KindEditorUtil.findItemName\">叶子类目</th>\r\n");
      out.write("        <th data-options=\"field:'sellPoint',width:100\">卖点</th>\r\n");
      out.write("        <th data-options=\"field:'price',width:70,align:'right',formatter:KindEditorUtil.formatPrice\">价格</th>\r\n");
      out.write("        <th data-options=\"field:'num',width:70,align:'right'\">库存数量</th>\r\n");
      out.write("        <th data-options=\"field:'barcode',width:100\">条形码</th>\r\n");
      out.write("        <th data-options=\"field:'status',width:60,align:'center',formatter:KindEditorUtil.formatItemStatus\">状态</th>\r\n");
      out.write("        <th data-options=\"field:'created',width:130,align:'center',formatter:KindEditorUtil.formatDateTime\">创建日期</th>\r\n");
      out.write("        <th data-options=\"field:'updated',width:130,align:'center',formatter:KindEditorUtil.formatDateTime\">更新日期</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("</table>\r\n");
      out.write("<div id=\"itemEditWindow\"\r\n");
      out.write("     class=\"easyui-window\"\r\n");
      out.write("     title=\"编辑商品\"\r\n");
      out.write("     data-options=\"modal:true,\r\n");
      out.write("     closed:true,\r\n");
      out.write("     iconCls:'icon-save',\r\n");
      out.write("     href:'/page/item-edit'\" style=\"width:80%;height:80%;padding:10px;\">\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("    function getSelectionsIds() {\r\n");
      out.write("        //获得复选框中选中的数据\r\n");
      out.write("        var items = $(\"#itemList\").datagrid(\"getSelections\");\r\n");
      out.write("        var ids = [];\r\n");
      out.write("        for (var i in items) {\r\n");
      out.write("            ids.push(items[i].id);\r\n");
      out.write("        }\r\n");
      out.write("        //将数据合并并用逗号隔开，很关键的操作，否则在进行异步请求的时候数据格式在后台会不识别\r\n");
      out.write("        ids = ids.join(\",\");\r\n");
      out.write("        return ids;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    var toolbar = [{\r\n");
      out.write("        text: '新增',\r\n");
      out.write("        iconCls: 'icon-add',\r\n");
      out.write("        handler: function () {\r\n");
      out.write("            /* 因为新增商品是一个单独页面，所以让选择器指向左侧新增商品的按钮上点击跳转即可*/\r\n");
      out.write("            $(\".tree-title:contains('新增商品')\").parent().click();\r\n");
      out.write("        }\r\n");
      out.write("    }, {\r\n");
      out.write("        text: '编辑',\r\n");
      out.write("        iconCls: 'icon-edit',\r\n");
      out.write("        handler: function () {\r\n");
      out.write("            var ids = getSelectionsIds();\r\n");
      out.write("            if (ids.length == 0) {\r\n");
      out.write("                $.messager.alert(\"提示\", \"请选择一个商品才能编辑。\");\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            if (ids.indexOf(',') > 0) {\r\n");
      out.write("                $.messager.alert(\"提示\", \"只能选择一个商品编辑。\");\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            $(\"#itemEditWindow\").window({\r\n");
      out.write("                onLoad :function(){\r\n");
      out.write("                    //回显数据\r\n");
      out.write("                    var data = $(\"#itemList\").datagrid(\"getSelections\")[0];\r\n");
      out.write("                    console.log(data);\r\n");
      out.write("                    data.priceView = KindEditorUtil.formatPrice(data.price);\r\n");
      out.write("                    $(\"#itemEditForm\").form(\"load\",data);\r\n");
      out.write("\r\n");
      out.write("                    // 加载商品描述, 回显商品的描述信息\r\n");
      out.write("                    $.getJSON('/query/item/desc/'+data.id,function(_data){\r\n");
      out.write("                        if(_data.status == 200){\r\n");
      out.write("                            //UM.getEditor('itemeEditDescEditor').setContent(_data.data.itemDesc, false);\r\n");
      out.write("                            itemEditEditor.html(_data.data.itemDesc);\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("\r\n");
      out.write("                    //加载商品规格\r\n");
      out.write("                    $.getJSON('/param/item/query/'+data.id,function(_data){\r\n");
      out.write("                        if(_data && _data.status == 200 && _data.data && _data.data.paramData){\r\n");
      out.write("                            $(\"#itemEditForm .params\").show();\r\n");
      out.write("                            $(\"#itemEditForm [name=itemParams]\").val(_data.data.paramData);\r\n");
      out.write("                            $(\"#itemEditForm [name=itemParamId]\").val(_data.data.id);\r\n");
      out.write("\r\n");
      out.write("                            //回显商品规格\r\n");
      out.write("                            var paramData = JSON.parse(_data.data.paramData);\r\n");
      out.write("\r\n");
      out.write("                            var html = \"<ul>\";\r\n");
      out.write("                            for(var i in paramData){\r\n");
      out.write("                                var pd = paramData[i];\r\n");
      out.write("                                html+=\"<li><table>\";\r\n");
      out.write("                                html+=\"<tr><td colspan=\\\"2\\\" class=\\\"group\\\">\"+pd.group+\"</td></tr>\";\r\n");
      out.write("\r\n");
      out.write("                                for(var j in pd.params){\r\n");
      out.write("                                    var ps = pd.params[j];\r\n");
      out.write("                                    html+=\"<tr><td class=\\\"param\\\"><span>\"+ps.k+\"</span>: </td><td><input autocomplete=\\\"off\\\" type=\\\"text\\\" value='\"+ps.v+\"'/></td></tr>\";\r\n");
      out.write("                                }\r\n");
      out.write("\r\n");
      out.write("                                html+=\"</li></table>\";\r\n");
      out.write("                            }\r\n");
      out.write("                            html+= \"</ul>\";\r\n");
      out.write("                            $(\"#itemEditForm .params td\").eq(1).html(html);\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("\r\n");
      out.write("                    KindEditorUtil.init({\r\n");
      out.write("                        \"pics\" : data.image,\r\n");
      out.write("                        \"cid\" : data.cid,\r\n");
      out.write("                        fun:function(node){\r\n");
      out.write("                            KindEditorUtil.changeItemParam(node, \"itemEditForm\");\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }).window(\"open\");\r\n");
      out.write("        }\r\n");
      out.write("    }, {\r\n");
      out.write("        text: \"删除\",\r\n");
      out.write("        iconCls: 'icon-cancel',\r\n");
      out.write("        handler: function () {\r\n");
      out.write("            var ids = getSelectionsIds();\r\n");
      out.write("            if (ids.length == 0) {\r\n");
      out.write("                $.messager.alert(\"提示\", \"请至少选择一个商品进行删除。\");\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            $.messager.confirm(\"确认\", \"确定删除id为\" + ids + \"的商品吗？\", function (result) {\r\n");
      out.write("                if (result) {\r\n");
      out.write("                    var params = {\"ids\": ids};\r\n");
      out.write("                    console.log(params)\r\n");
      out.write("                    $.post(\"/item/deleteItems\", params, function (data) {\r\n");
      out.write("                        if (data.status == 200) {\r\n");
      out.write("                            $.messager.alert(\"提示\", \"商品删除成功！\", 'info', function () {\r\n");
      out.write("                                $(\"#itemList\").datagrid(\"reload\");\r\n");
      out.write("                            })\r\n");
      out.write("                        }else{\r\n");
      out.write("                            $.messager.alert(\"提示\",data.msg);\r\n");
      out.write("                        }\r\n");
      out.write("                    })\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("        }\r\n");
      out.write("    },{\r\n");
      out.write("        text: \"上架\",\r\n");
      out.write("        iconCls: 'icon-remove',\r\n");
      out.write("        handler: function () {\r\n");
      out.write("            var ids = getSelectionsIds();\r\n");
      out.write("            if (ids.length == 0) {\r\n");
      out.write("                $.messager.alert(\"提示\", \"请至少选择一个商品进行上架。\");\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            $.messager.confirm(\"确认\", \"确定上架id为\" + ids + \"的商品吗？\", function (result) {\r\n");
      out.write("                if (result) {\r\n");
      out.write("                    var params = {\"ids\": ids};\r\n");
      out.write("                    $.post(\"/item/reshelf\", params, function (data) {\r\n");
      out.write("                        if (data.status == 200) {\r\n");
      out.write("                            $.messager.alert(\"提示\", \"商品上架成功！\", 'info', function () {\r\n");
      out.write("                                $(\"#itemList\").datagrid(\"reload\");\r\n");
      out.write("                            })\r\n");
      out.write("                        }\r\n");
      out.write("                    })\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("        }\r\n");
      out.write("    },{\r\n");
      out.write("        text: \"下架\",\r\n");
      out.write("        iconCls: 'icon-remove',\r\n");
      out.write("        handler: function () {\r\n");
      out.write("            var ids = getSelectionsIds();\r\n");
      out.write("            if (ids.length == 0) {\r\n");
      out.write("                $.messager.alert(\"提示\", \"请至少选择一个商品进行下架。\");\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            $.messager.confirm(\"确认\", \"确定下架id为\" + ids + \"的商品吗？\", function (result) {\r\n");
      out.write("                if (result) {\r\n");
      out.write("                    var params = {\"ids\": ids};\r\n");
      out.write("                    $.post(\"/item/instock\", params, function (data) {\r\n");
      out.write("                        if (data.status == 200) {\r\n");
      out.write("                            $.messager.alert(\"提示\", \"商品下架成功！\", 'info', function () {\r\n");
      out.write("                                $(\"#itemList\").datagrid(\"reload\");\r\n");
      out.write("                            })\r\n");
      out.write("                        }\r\n");
      out.write("                    })\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    ]\r\n");
      out.write("\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
